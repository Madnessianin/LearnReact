{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","Redux/dialogs-selectors.js","components/Dialogs/DialogsConteiner.jsx"],"names":["module","exports","DialogItem","props","className","classes","avatar","src","link","activeClassName","active","to","id","name","Messege","messages_item","message","maxLength50","maxLengthCreator","SendNewMessageRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","dialogsElements","dialogs","map","dialog","key","messagesElements","messages","style","inner","items","data","sendMessage","newMessageText","getDialogs","state","dialogsPage","getMessages","mapDispatchToProps","compose","connect","withAuthRedirect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,uBAAuB,OAAS,wBAAwB,KAAO,sBAAsB,OAAS,0B,+FCkB5IC,EAfI,SAACC,GAClB,OACE,yBAAKC,UAAWC,IAAQC,QACtB,yBAAKC,IAAI,2FACT,kBAAC,IAAD,CACEH,UAAWC,IAAQG,KACnBC,gBAAiBJ,IAAQK,OACzBC,GAAI,YAAcR,EAAMS,IAEvBT,EAAMU,QCNAC,EAJC,SAACX,GACf,OAAO,yBAAKC,UAAWC,IAAQU,eAAgBZ,EAAMa,U,kCCIjDC,EAAcC,YAAiB,IAmB/BC,EAAsBC,YAAU,CAAEC,KAAM,cAAlBD,EAlBL,SAACjB,GACtB,OACE,0BAAMmB,SAAUnB,EAAMoB,cACpB,6BACE,kBAACC,EAAA,EAAD,CACEC,UAAWC,IACXb,KAAM,iBACNc,YAAa,oBACbC,SAAU,CAACC,IAAUZ,MAGzB,6BACE,6CAoCOa,EA5BC,SAAC3B,GACf,IAAI4B,EAAkB5B,EAAM6B,QAAQC,KAAI,SAACC,GAAD,OACpC,yBAAKC,IAAKD,EAAOtB,IACf,kBAAC,EAAD,CAAYC,KAAMqB,EAAOrB,KAAMD,GAAIsB,EAAOtB,SAG9CwB,EAAmBjC,EAAMkC,SAASJ,KAAI,SAACjB,GAAD,OACpC,yBAAKmB,IAAKnB,EAAQJ,IAChB,kBAAC,EAAD,CAASI,QAASA,EAAQA,cAOhC,OACE,yBAAKZ,UAAWkC,IAAMN,SACpB,yBAAK5B,UAAWkC,IAAMC,OACpB,yBAAKnC,UAAWkC,IAAME,OAAQT,GAC9B,yBAAK3B,UAAWkC,IAAMD,UACpB,6BAAMD,GACN,kBAACjB,EAAD,CAAqBG,SAVd,SAACmB,GACZtC,EAAMuC,YAAYD,EAAKE,uB,uBCzChBC,EAAa,SAACC,GACzB,OAAOA,EAAMC,YAAYd,SAGde,EAAc,SAACF,GAC1B,OAAOA,EAAMC,YAAYT,UCOrBW,EAAqB,CACzBN,iBAGaO,sBACbC,aATsB,SAACL,GAAD,MAAY,CAClCb,QAASY,EAAWC,GACpBR,SAAUU,EAAYF,MAOGG,GACzBG,IAFaF,CAGbnB","file":"static/js/4.eb7344ac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1AGQ0\",\"inner\":\"Dialogs_inner__3VGGe\",\"avatar\":\"Dialogs_avatar__2Pdww\",\"link\":\"Dialogs_link__aFylj\",\"active\":\"Dialogs_active__2gB1k\"};","import React from \"react\";\nimport classes from \"./../Dialogs.module.css\";\nimport { NavLink } from \"react-router-dom\";\n\nconst DialogItem = (props) => {\n  return (\n    <div className={classes.avatar}>\n      <img src=\"https://static.independent.co.uk/s3fs-public/thumbnails/image/2020/06/18/10/avatar.jpg\" />\n      <NavLink\n        className={classes.link}\n        activeClassName={classes.active}\n        to={\"/dialogs/\" + props.id}\n      >\n        {props.name}\n      </NavLink>\n    </div>\n  );\n};\n\nexport default DialogItem;\n","import React from \"react\";\nimport classes from \"./../Dialogs.module.css\";\n\nconst Messege = (props) => {\n  return <div className={classes.messages_item}>{props.message}</div>;\n};\n\nexport default Messege;\n","import React from \"react\";\nimport style from \"./Dialogs.module.css\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Messege from \"./Message/Message\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { maxLengthCreator, required } from \"../../Utils/Validators/validators\";\nimport { Textarea } from \"../Common/FormsControl/FormsControl\";\n\nconst maxLength50 = maxLengthCreator(50);\nconst SendNewMessage = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field\n          component={Textarea}\n          name={\"newMessageText\"}\n          placeholder={\"Enter new message\"}\n          validate={[required, maxLength50]}\n        />\n      </div>\n      <div>\n        <button>Send</button>\n      </div>\n    </form>\n  );\n};\n\nconst SendNewMessageRedux = reduxForm({ form: \"addMessage\" })(SendNewMessage);\n\nconst Dialogs = (props) => {\n  let dialogsElements = props.dialogs.map((dialog) => (\n      <div key={dialog.id}>\n        <DialogItem name={dialog.name} id={dialog.id} />\n      </div>\n    )),\n    messagesElements = props.messages.map((message) => (\n      <div key={message.id}>\n        <Messege message={message.message} />\n      </div>\n    )),\n    addMessage = (data) => {\n      props.sendMessage(data.newMessageText);\n    };\n\n  return (\n    <div className={style.dialogs}>\n      <div className={style.inner}>\n        <div className={style.items}>{dialogsElements}</div>\n        <div className={style.messages}>\n          <div>{messagesElements}</div>\n          <SendNewMessageRedux onSubmit={addMessage} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dialogs;\n","export const getDialogs = (state) => {\n  return state.dialogsPage.dialogs;\n};\n\nexport const getMessages = (state) => {\n  return state.dialogsPage.messages;\n};\n","import React from \"react\";\nimport { sendMessage } from \"../../Redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport { connect } from \"react-redux\";\nimport { withAuthRedirect } from \"../Hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\nimport { getDialogs, getMessages } from \"../../Redux/dialogs-selectors\";\n\nconst mapStateToProps = (state) => ({\n  dialogs: getDialogs(state),\n  messages: getMessages(state),\n});\nconst mapDispatchToProps = {\n  sendMessage,\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthRedirect\n)(Dialogs);\n"],"sourceRoot":""}