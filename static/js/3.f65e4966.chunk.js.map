{"version":3,"sources":["components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Posts/Post.module.css","../node_modules/classnames/index.js","components/Common/Form/EditForm.module.css","components/Profile/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/MyPosts/Posts/Post.jsx","components/Common/Form/EditForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsConteiner.jsx","components/Profile/Profile.jsx","components/Profile/ProfileConteiner.jsx"],"names":["module","exports","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","default","Status","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","event","currentTarget","value","ProfileStatusWithHooks","isOwner","Post","likePost","setLikePost","className","style","item","title","PhotoLoginConteiner","messages","message","likes","cn","ButtonLike","colorLike","onClick","likeDislike","postId","countLike","likeCounts","FormEditConteiner","reduxForm","form","onSubmit","handleSubmit","formInner","Field","placeholder","name","identifierText","component","Textarea","validate","required","btn","Button","textBtn","type","MyPosts","postsElements","this","posts","map","post","id","likesCount","isLikes","likeDislikeSucsess","data","addPost","newPostText","React","PureComponent","mapDispatchYoProps","MyPostsConteiner","connect","state","getPosts","ProfileInfo","profile","info","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contacts","Object","keys","contactKey","contactValue","LoadFile","wrapperInput","inputFile","onMainPhotoSelected","inputLabel","htmlFor","Contact","contactsItem","link","href","target","Profile","wrapper","avatar","src","photos","large","userPhoto","alt","loadPhoto","files","savePhoto","wrapperBtn","itemInner","Preloader","ProfileConteiner","userId","match","params","autorizedUserId","getUser","getStatus","checkProfile","prevProps","prevState","Component","mapDispatchToProps","compose","getProfile","getUserStatus","getAutorizedUserId","withRouter","withAuthRedirect"],"mappings":";2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,uBAAuB,OAAS,wBAAwB,QAAU,yBAAyB,UAAY,2BAA2B,KAAO,sBAAsB,OAAS,wBAAwB,SAAW,0BAA0B,aAAe,8BAA8B,KAAO,sBAAsB,KAAO,sBAAsB,aAAe,8BAA8B,UAAY,2BAA2B,WAAa,4BAA4B,WAAa,8B,oBCAnhBD,EAAOC,QAAU,CAAC,KAAO,sBAAsB,MAAQ,uBAAuB,MAAQ,yB,oBCAtFD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,SAAW,uBAAuB,MAAQ,oBAAoB,MAAQ,oBAAoB,UAAY,wBAAwB,WAAa,yBAAyB,UAAY,0B,oBCD5N,OAOC,WACA,aAEA,IAAIC,EAAS,GAAGC,eAEhB,SAASC,IAGR,IAFA,IAAIC,EAAU,GAELC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAC1C,IAAIG,EAAMF,UAAUD,GACpB,GAAKG,EAAL,CAEA,IAAIC,SAAiBD,EAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC3BL,EAAQM,KAAKF,QACP,GAAIG,MAAMC,QAAQJ,IAAQA,EAAID,OAAQ,CAC5C,IAAIM,EAAQV,EAAWW,MAAM,KAAMN,GAC/BK,GACHT,EAAQM,KAAKG,QAER,GAAgB,WAAZJ,EACV,IAAK,IAAIM,KAAOP,EACXP,EAAOe,KAAKR,EAAKO,IAAQP,EAAIO,IAChCX,EAAQM,KAAKK,IAMjB,OAAOX,EAAQa,KAAK,KAGgBlB,EAAOC,SAC3CG,EAAWe,QAAUf,EACrBJ,EAAOC,QAAUG,QAGX,kBACL,OAAOA,GADF,QAAe,OAAf,aAtCP,I,oBCNDJ,EAAOC,QAAU,CAAC,KAAO,uBAAuB,IAAM,wB,8HCehDmB,EAAS,SAACC,GAAW,IAAD,EACMC,oBAAS,GADf,mBACnBC,EADmB,KACTC,EADS,OAEAF,mBAASD,EAAMI,QAFf,mBAErBA,EAFqB,KAEbC,EAFa,KAQxB,OAJAC,qBAAU,WACRD,EAAUL,EAAMI,UACf,CAACJ,EAAMI,SAGR,8BACIF,GACA,6BACE,0BACEK,cAAe,WACbJ,GAAY,KAGbC,GAAU,OAIhBF,GACC,6BACE,2BACEM,WAAW,EACXC,OAAQ,WACNN,GAAY,GACZH,EAAMU,aAAaN,IAErBO,SAAU,SAACC,GACTP,EAAUO,EAAMC,cAAcC,QAEhCA,MAAOV,OAOJW,EAnDgB,SAACf,GAC9B,OACE,6BACGA,EAAMgB,QACL,kBAAC,EAAWhB,GAEZ,8BAAOA,EAAMI,QAAU,Q,wFC2BhBa,EA7BF,SAACjB,GAAW,IAAD,EACQC,mBAASD,EAAMkB,UADvB,mBACjBA,EADiB,KACPC,EADO,KAMtB,OAJAb,qBAAU,WACRa,EAAYnB,EAAMkB,YACjB,CAAClB,EAAMkB,WAGR,yBAAKE,UAAWC,IAAMC,MACpB,yBAAKF,UAAWC,IAAME,OACpB,kBAACC,EAAA,EAAD,OAEF,yBAAKJ,UAAWC,IAAMI,UAAWzB,EAAM0B,SAEvC,yBAAKN,UAAWC,IAAMM,OACpB,4BACEP,UAAWQ,IAAGP,IAAMQ,WAAYX,EAAWG,IAAMS,UAAY,IAC7DC,QAAS,WACPZ,GAAaD,GACblB,EAAMgC,YAAYhC,EAAMiC,OAAQf,KAGlC,uBAAGE,UAAU,iBACb,0BAAMA,UAAWC,IAAMa,WAAYlC,EAAMmC,gB,6DCJpCC,EAFWC,eAjBT,SAACrC,GAChB,OACE,0BAAMoB,UAAWC,IAAMiB,KAAMC,SAAUvC,EAAMwC,cAC3C,yBAAKpB,UAAWC,IAAMoB,WACpB,kBAACC,EAAA,EAAD,CACEC,YAAa,qBACbC,KAAM5C,EAAM6C,eACZC,UAAWC,IACXC,SAAU,CAACC,QAGf,yBAAK7B,UAAWC,IAAM6B,KACpB,kBAACC,EAAA,EAAD,CAAQC,QAAS,WAAYC,KAAM,gBCgB5BC,E,uKA7BH,IAAD,OACHC,EAAgBC,KAAKxD,MAAMyD,MAAMC,KAAI,SAACC,GAAD,OACvC,kBAAC,EAAD,CACEhE,IAAKgE,EAAKC,GACV3B,OAAQ0B,EAAKC,GACblC,QAASiC,EAAKjC,QACdS,WAAYwB,EAAKE,WACjB3C,SAAUyC,EAAKG,QACf9B,YAAa,EAAKhC,MAAM+D,wBAM5B,OACE,yBAAK3C,UAAWC,IAAM5B,OACpB,yBAAK2B,UAAWC,IAAMiB,MACpB,kBAAC,EAAD,CACEA,KAAM,UACNC,SARM,SAACyB,GACb,EAAKhE,MAAMiE,QAAQD,EAAKE,cAQlBrB,eAAgB,iBAGpB,yBAAKzB,UAAWC,IAAMoC,OAAQF,Q,GAxBhBY,IAAMC,e,gBCOtBC,EAAqB,CACzBJ,YACAF,wBAIaO,EAFUC,aAVD,SAACC,GACvB,MAAO,CACLf,MAAOgB,YAASD,MAQ8BH,EAAzBE,CAA6CjB,GC6ChEoB,EAAc,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,QAASvE,EAAoC,EAApCA,OAAQM,EAA4B,EAA5BA,aAAcM,EAAc,EAAdA,QACpD,OACE,yBAAKI,UAAWC,IAAMuD,MACpB,wBAAIxD,UAAWC,IAAMuB,MAAO+B,EAAQE,UACpC,yBAAKzD,UAAWC,IAAMjB,QACpB,kBAAC,EAAD,CACEA,OAAQA,EACRM,aAAcA,EACdM,QAASA,KAGb,uCAAa2D,EAAQG,SACrB,gDAAsBH,EAAQI,eAAiB,MAAQ,MACvD,uDAA6BJ,EAAQK,2BACrC,yBAAK5D,UAAWC,IAAM4D,UACnBC,OAAOC,KAAKR,EAAQM,UAAUvB,KAAI,SAAC/D,GAClC,OACE,kBAAC,EAAD,CACEA,IAAKA,EACLyF,WAAYzF,EACZ0F,aAAcV,EAAQM,SAAStF,WASvC2F,EAAW,SAACtF,GAChB,OACE,yBAAKoB,UAAWC,IAAMkE,cACpB,uBAAGnE,UAAU,oBACb,2BACEA,UAAWC,IAAMmE,UACjB7E,SAAUX,EAAMyF,oBAChB7B,GAAG,OACHhB,KAAM,OACNS,KAAM,SAER,2BAAOjC,UAAWC,IAAMqE,WAAYC,QAAS,QAA7C,iBAOAC,EAAU,SAAC,GAAkC,IAAhCR,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,aAC7B,OACE,yBAAKjE,UAAWC,IAAMwE,cACpB,+BAAQT,EAAR,MACA,uBAAGhE,UAAWC,IAAMyE,KAAMC,KAAMV,EAAcW,OAAQ,UACnDX,KAKMY,EA5GC,SAACjG,GACf,IADyB,EAMUC,oBAAS,GANnB,6BAOzB,OAAKD,EAAM2E,QAIT,yBAAKvD,UAAWC,IAAMsD,SACpB,yBAAKvD,UAAWC,IAAM5B,OACpB,yBAAK2B,UAAWC,IAAMC,MACpB,yBAAKF,UAAWC,IAAM6E,SACpB,yBACE9E,UAAWC,IAAM8E,OACjBC,IAAKpG,EAAM2E,QAAQ0B,OAAOC,OAASC,IACnCC,IAAI,KAEN,yBAAKpF,UAAWC,IAAMoF,WACnBzG,EAAMgB,SACL,kBAAC,EAAD,CAAUyE,oBArBE,SAAC7E,GACrBA,EAAMoF,OAAOU,MAAMvH,QACrBa,EAAM2G,UAAU/F,EAAMoF,OAAOU,MAAM,SAuB9B1G,EAAMgB,SACL,yBAAKI,UAAWC,IAAMuF,YACpB,kBAACzD,EAAA,EAAD,CAAQC,QAAS,YAAa0C,KAAM,YAK1C,yBAAK1E,UAAWC,IAAMC,MACpB,yBAAKF,UAAWC,IAAMwF,WACpB,yBAAKzF,UAAWC,IAAM6E,SACpB,kBAAC,EAAD,CACEvB,QAAS3E,EAAM2E,QACfvE,OAAQJ,EAAMI,OACdM,aAAcV,EAAMU,aACpBM,QAAShB,EAAMgB,WAInB,6BAAMhB,EAAMgB,SAAW,kBAAC,EAAD,WApCxB,kBAAC8F,EAAA,EAAD,O,uBCALC,E,6KAEF,IAAIC,EAASxD,KAAKxD,MAAMiH,MAAMC,OAAOF,OAChCA,IACHA,EAASxD,KAAKxD,MAAMmH,iBAEtB3D,KAAKxD,MAAMoH,QAAQJ,GACnBxD,KAAKxD,MAAMqH,UAAUL,K,0CAIrBxD,KAAK8D,iB,yCAEYC,EAAWC,GACxBhE,KAAKxD,MAAMiH,MAAMC,OAAOF,QAAUO,EAAUN,MAAMC,OAAOF,QAC3DxD,KAAK8D,iB,+BAKP,IAAItG,GACDwC,KAAKxD,MAAMiH,MAAMC,OAAOF,QACzBxD,KAAKxD,MAAMiH,MAAMC,OAAOF,QAAUxD,KAAKxD,MAAMmH,gBAC/C,OACE,kBAAC,EAAD,iBACM3D,KAAKxD,MADX,CAEE2E,QAASnB,KAAKxD,MAAM2E,QACpBvE,OAAQoD,KAAKxD,MAAMI,OACnBY,QAASA,EACTN,aAAc8C,KAAKxD,MAAMU,aACzBiG,UAAWnD,KAAKxD,MAAM2G,iB,GA9BCxC,IAAMsD,WA0CjCC,EAAqB,CAAEN,YAASC,cAAW3G,iBAAciG,eAE9CgB,sBACbpD,aAToB,SAACC,GAAD,MAAY,CAChCG,QAASiD,YAAWpD,GACpBpE,OAAQyH,YAAcrD,GACtB2C,gBAAiBW,YAAmBtD,MAMXkD,GACzBK,IACAC,IAHaL,CAIbZ","file":"static/js/3.f65e4966.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__Tl0bf\",\"inner\":\"Profile_inner__3YQNQ\",\"avatar\":\"Profile_avatar__33H1P\",\"wrapper\":\"Profile_wrapper__3TEQ_\",\"itemInner\":\"Profile_itemInner__2Dgea\",\"name\":\"Profile_name__1ObWH\",\"status\":\"Profile_status__3JRFd\",\"contacts\":\"Profile_contacts__-fwET\",\"contactsItem\":\"Profile_contactsItem__3CVXa\",\"link\":\"Profile_link__1-Yo_\",\"info\":\"Profile_info__teaQ1\",\"wrapperInput\":\"Profile_wrapperInput__eociG\",\"inputFile\":\"Profile_inputFile__gUTLQ\",\"inputLabel\":\"Profile_inputLabel__1AWDA\",\"wrapperBtn\":\"Profile_wrapperBtn__2oamb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"MyPosts_post__2BU6s\",\"posts\":\"MyPosts_posts__3qzdi\",\"inner\":\"MyPosts_inner__r2hqX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3-n6J\",\"messages\":\"Post_messages__18KT8\",\"title\":\"Post_title__2oXB_\",\"likes\":\"Post_likes__3izvk\",\"countLike\":\"Post_countLike__2ythp\",\"ButtonLike\":\"Post_ButtonLike__wS1dW\",\"colorLike\":\"Post_colorLike__2sanc\"};","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"EditForm_form__3e5lV\",\"btn\":\"EditForm_btn__193W-\"};","import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\n\nconst ProfileStatusWithHooks = (props) => {\n  return (\n    <div>\n      {props.isOwner ? (\n        <Status {...props} />\n      ) : (\n        <span>{props.status || \"--\"}</span>\n      )}\n    </div>\n  );\n};\n\nconst Status = (props) => {\n  let [editMode, setEditMode] = useState(false),\n    [status, setStatus] = useState(props.status);\n\n  useEffect(() => {\n    setStatus(props.status);\n  }, [props.status]);\n\n  return (\n    <div>\n      {!editMode && (\n        <div>\n          <span\n            onDoubleClick={() => {\n              setEditMode(true);\n            }}\n          >\n            {status || \"--\"}\n          </span>\n        </div>\n      )}\n      {editMode && (\n        <div>\n          <input\n            autoFocus={true}\n            onBlur={() => {\n              setEditMode(false);\n              props.updateStatus(status);\n            }}\n            onChange={(event) => {\n              setStatus(event.currentTarget.value);\n            }}\n            value={status}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\nexport default ProfileStatusWithHooks;\n","import React from \"react\";\nimport style from \"./Post.module.css\";\nimport PhotoLoginConteiner from \"../../../PhotoLogin/PhotoLoginConteiner\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\n\nimport cn from \"classnames\";\n\nconst Post = (props) => {\n  let [likePost, setLikePost] = useState(props.likePost);\n  useEffect(() => {\n    setLikePost(props.likePost);\n  }, [props.likePost]);\n\n  return (\n    <div className={style.item}>\n      <div className={style.title}>\n        <PhotoLoginConteiner />\n      </div>\n      <div className={style.messages}>{props.message}</div>\n\n      <div className={style.likes}>\n        <button\n          className={cn(style.ButtonLike, likePost ? style.colorLike : \"\")}\n          onClick={() => {\n            setLikePost(!likePost);\n            props.likeDislike(props.postId, likePost);\n          }}\n        >\n          <i className=\"far fa-heart\"></i>\n          <span className={style.countLike}>{props.likeCounts}</span>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { required } from \"../../../Utils/Validators/validators\";\nimport Button from \"../Button/Button\";\nimport { Textarea } from \"../FormsControl/FormsControl\";\nimport style from \"./EditForm.module.css\";\n\nconst FormEdit = (props) => {\n  return (\n    <form className={style.form} onSubmit={props.handleSubmit}>\n      <div className={style.formInner}>\n        <Field\n          placeholder={\"Enter new text....\"}\n          name={props.identifierText}\n          component={Textarea}\n          validate={[required]}\n        />\n      </div>\n      <div className={style.btn}>\n        <Button textBtn={\"Add post\"} type={\"submit\"} />\n      </div>\n    </form>\n  );\n};\nconst FormEditConteiner = reduxForm()(FormEdit);\n\nexport default FormEditConteiner;\n","import React from \"react\";\nimport style from \"./MyPosts.module.css\";\nimport Post from \"./Posts/Post\";\nimport FormEditConteiner from \"../../Common/Form/EditForm\";\n\nclass MyPosts extends React.PureComponent {\n  render() {\n    let postsElements = this.props.posts.map((post) => (\n      <Post\n        key={post.id}\n        postId={post.id}\n        message={post.message}\n        likeCounts={post.likesCount}\n        likePost={post.isLikes}\n        likeDislike={this.props.likeDislikeSucsess}\n      />\n    ));\n    let addPost = (data) => {\n      this.props.addPost(data.newPostText);\n    };\n    return (\n      <div className={style.inner}>\n        <div className={style.form}>\n          <FormEditConteiner\n            form={\"addPost\"}\n            onSubmit={addPost}\n            identifierText={\"newPostText\"}\n          />\n        </div>\n        <div className={style.posts}>{postsElements}</div>\n      </div>\n    );\n  }\n}\n\nexport default MyPosts;\n","import React from \"react\";\nimport { addPost, likeDislikeSucsess } from \"../../../Redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport { connect } from \"react-redux\";\nimport { getPosts } from \"../../../Redux/profile-selectors\";\n\nconst mapStateToProps = (state) => {\n  return {\n    posts: getPosts(state),\n  };\n};\n\nconst mapDispatchYoProps = {\n  addPost,\n  likeDislikeSucsess,\n};\nconst MyPostsConteiner = connect(mapStateToProps, mapDispatchYoProps)(MyPosts);\n\nexport default MyPostsConteiner;\n","import React from \"react\";\nimport Preloader from \"../Common/Preloader/Preloader\";\nimport style from \"./Profile.module.css\";\nimport ProfileStatusWithHooks from \"./ProfileStatus/ProfileStatusWithHooks\";\nimport userPhoto from \"../../assets/images/user.png\";\nimport MyPostsConteiner from \"./MyPosts/MyPostsConteiner\";\nimport Button from \"../Common/Button/Button\";\nimport { useState } from \"react\";\nimport { submit } from \"redux-form\";\n\nconst Profile = (props) => {\n  let onMainPhotoSelected = (event) => {\n    if (event.target.files.length) {\n      props.savePhoto(event.target.files[0]);\n    }\n  };\n  let [addPostode, setAddPostMode] = useState(false);\n  if (!props.profile) {\n    return <Preloader />;\n  }\n  return (\n    <div className={style.profile}>\n      <div className={style.inner}>\n        <div className={style.item}>\n          <div className={style.wrapper}>\n            <img\n              className={style.avatar}\n              src={props.profile.photos.large || userPhoto}\n              alt=\"\"\n            />\n            <div className={style.loadPhoto}>\n              {props.isOwner && (\n                <LoadFile onMainPhotoSelected={onMainPhotoSelected} />\n              )}\n            </div>\n          </div>\n          {props.isOwner && (\n            <div className={style.wrapperBtn}>\n              <Button textBtn={\"Edit mode\"} link={\"/edit\"} />\n            </div>\n          )}\n        </div>\n\n        <div className={style.item}>\n          <div className={style.itemInner}>\n            <div className={style.wrapper}>\n              <ProfileInfo\n                profile={props.profile}\n                status={props.status}\n                updateStatus={props.updateStatus}\n                isOwner={props.isOwner}\n              />\n            </div>\n\n            <div>{props.isOwner && <MyPostsConteiner />}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner }) => {\n  return (\n    <div className={style.info}>\n      <h3 className={style.name}>{profile.fullName}</h3>\n      <div className={style.status}>\n        <ProfileStatusWithHooks\n          status={status}\n          updateStatus={updateStatus}\n          isOwner={isOwner}\n        />\n      </div>\n      <div>About: {profile.aboutMe}</div>\n      <div>LookingForAJob: {profile.lookingForAJob ? \"yes\" : \"no\"}</div>\n      <div>My profecional skills: {profile.lookingForAJobDescription}</div>\n      <div className={style.contacts}>\n        {Object.keys(profile.contacts).map((key) => {\n          return (\n            <Contact\n              key={key}\n              contactKey={key}\n              contactValue={profile.contacts[key]}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nconst LoadFile = (props) => {\n  return (\n    <div className={style.wrapperInput}>\n      <i className=\"fas fa-download\"></i>\n      <input\n        className={style.inputFile}\n        onChange={props.onMainPhotoSelected}\n        id=\"file\"\n        name={\"file\"}\n        type={\"file\"}\n      />\n      <label className={style.inputLabel} htmlFor={\"file\"}>\n        Choose file\n      </label>\n    </div>\n  );\n};\n\nconst Contact = ({ contactKey, contactValue }) => {\n  return (\n    <div className={style.contactsItem}>\n      <label>{contactKey}: </label>\n      <a className={style.link} href={contactValue} target={\"_blank\"}>\n        {contactValue}\n      </a>\n    </div>\n  );\n};\nexport default Profile;\n","import React from \"react\";\nimport Profile from \"./Profile\";\nimport { connect } from \"react-redux\";\nimport {\n  getUser,\n  getStatus,\n  updateStatus,\n  savePhoto,\n} from \"../../Redux/profile-reducer\";\nimport { withRouter } from \"react-router-dom\";\nimport { withAuthRedirect } from \"../Hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\nimport {\n  getAutorizedUserId,\n  getProfile,\n  getUserStatus,\n} from \"../../Redux/profile-selectors\";\n\nclass ProfileConteiner extends React.Component {\n  checkProfile() {\n    let userId = this.props.match.params.userId;\n    if (!userId) {\n      userId = this.props.autorizedUserId;\n    }\n    this.props.getUser(userId);\n    this.props.getStatus(userId);\n  }\n\n  componentDidMount() {\n    this.checkProfile();\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.match.params.userId != prevProps.match.params.userId) {\n      this.checkProfile();\n    }\n  }\n\n  render() {\n    let isOwner =\n      !this.props.match.params.userId ||\n      this.props.match.params.userId == this.props.autorizedUserId;\n    return (\n      <Profile\n        {...this.props}\n        profile={this.props.profile}\n        status={this.props.status}\n        isOwner={isOwner}\n        updateStatus={this.props.updateStatus}\n        savePhoto={this.props.savePhoto}\n      />\n    );\n  }\n}\n\nlet mapStateToProps = (state) => ({\n  profile: getProfile(state),\n  status: getUserStatus(state),\n  autorizedUserId: getAutorizedUserId(state),\n});\n\nlet mapDispatchToProps = { getUser, getStatus, updateStatus, savePhoto };\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withRouter,\n  withAuthRedirect\n)(ProfileConteiner);\n"],"sourceRoot":""}