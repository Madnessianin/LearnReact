{"version":3,"sources":["components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Posts/Post.module.css","../node_modules/classnames/index.js","components/Common/Form/EditForm.module.css","components/Profile/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/MyPosts/Posts/Post.jsx","components/Common/Form/EditForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsConteiner.jsx","components/Profile/Profile.jsx","components/Profile/ProfileConteiner.jsx"],"names":["module","exports","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","default","Status","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","event","currentTarget","value","ProfileStatusWithHooks","isOwner","Post","likePost","setLikePost","className","style","item","title","PhotoLoginConteiner","messages","message","likes","cn","ButtonLike","colorLike","onClick","likeDislike","postId","countLike","likeCounts","FormEditConteiner","reduxForm","form","onSubmit","handleSubmit","formInner","Field","placeholder","name","identifierText","component","Textarea","validate","required","btn","Button","textBtn","type","MyPosts","postsElements","this","posts","map","post","id","likesCount","isLikes","likeDislikeSucsess","data","addPost","newPostText","React","PureComponent","mapDispatchYoProps","MyPostsConteiner","connect","state","getPosts","ProfileInfo","profile","info","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contacts","Object","keys","contactKey","contactValue","LoadFile","wrapperInput","inputFile","onMainPhotoSelected","inputLabel","htmlFor","Contact","contactsItem","link","href","target","Profile","wrapper","avatar","src","photos","large","userPhoto","alt","loadPhoto","files","savePhoto","wrapperBtn","itemInner","Preloader","ProfileConteiner","userId","match","params","autorizedUserId","getUser","getStatus","checkProfile","prevProps","prevState","Component","mapDispatchToProps","compose","getProfile","getUserStatus","getAutorizedUserId","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/3.366e1caf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1GWcK\",\"inner\":\"Profile_inner__1Gbba\",\"avatar\":\"Profile_avatar__33UfQ\",\"wrapper\":\"Profile_wrapper__2TKcy\",\"itemInner\":\"Profile_itemInner__3x4Z8\",\"name\":\"Profile_name__2n-wZ\",\"status\":\"Profile_status__2CXpB\",\"contacts\":\"Profile_contacts__3osy6\",\"contactsItem\":\"Profile_contactsItem__1qUze\",\"link\":\"Profile_link__1JEyk\",\"info\":\"Profile_info__uMypz\",\"wrapperInput\":\"Profile_wrapperInput__1H7XY\",\"inputFile\":\"Profile_inputFile__gM6mR\",\"inputLabel\":\"Profile_inputLabel__2--Q8\",\"wrapperBtn\":\"Profile_wrapperBtn__2ujlL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"MyPosts_post__1VWrW\",\"posts\":\"MyPosts_posts__1JHv-\",\"inner\":\"MyPosts_inner__2x77V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__UHDgP\",\"messages\":\"Post_messages__1bDwo\",\"title\":\"Post_title__gNMLT\",\"likes\":\"Post_likes__DGRQe\",\"countLike\":\"Post_countLike__bSXUA\",\"ButtonLike\":\"Post_ButtonLike__17Pwo\",\"colorLike\":\"Post_colorLike__DtYAJ\"};","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"EditForm_form__25-6s\",\"btn\":\"EditForm_btn__1n5ld\"};","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    return (\r\n        <div>\r\n            {props.isOwner ? <Status {...props} /> : <span>{props.status || \"--\"}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Status = (props) => {\r\n    let [editMode, setEditMode] = useState(false),\r\n        [status, setStatus] = useState(props.status)\r\n    \r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n    \r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={()=>{setEditMode(true)}}>{status || \"--\"}</span>\r\n                </div>}\r\n            {editMode &&\r\n                <div>\r\n                    <input autoFocus={true}\r\n                           onBlur = {()=>{\r\n                               setEditMode(false)\r\n                               props.updateStatus(status)}}\r\n                           onChange = {(event)=>{setStatus(event.currentTarget.value)}}\r\n                           value = {status}/>\r\n                </div>}\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport style from './Post.module.css';\r\nimport PhotoLoginConteiner from '../../../PhotoLogin/PhotoLoginConteiner'\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\nimport cn from 'classnames'\r\n\r\nconst Post = (props) => {\r\n    let [likePost, setLikePost] = useState(props.likePost)\r\n    useEffect(()=>{\r\n      setLikePost(props.likePost)\r\n    }, [props.likePost])\r\n\r\n    return (\r\n    <div className={style.item}>\r\n      <div className = {style.title}>\r\n        <PhotoLoginConteiner />\r\n      </div>  \r\n      <div className = {style.messages}>\r\n        {props.message}\r\n      </div>\r\n      \r\n      <div className = {style.likes} >\r\n        <button className = {cn(style.ButtonLike, likePost ? style.colorLike : '')} onClick = {()=>{\r\n                      setLikePost(!likePost)\r\n                      props.likeDislike(props.postId, likePost)}}>\r\n          <i className=\"far fa-heart\"></i>\r\n          <span className = {style.countLike}>{props.likeCounts}</span>\r\n        </button>\r\n      </div>\r\n    </div>   \r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { required } from '../../../Utils/Validators/validators'\r\nimport Button from '../Button/Button'\r\nimport { Textarea } from '../FormsControl/FormsControl'\r\nimport style from './EditForm.module.css'\r\n\r\n\r\nconst FormEdit = (props) => {\r\n    return (\r\n    <form className = {style.form} onSubmit = {props.handleSubmit}>\r\n        <div className = {style.formInner}>\r\n            <Field placeholder = {\"Enter new text....\"}\r\n                name = {props.identifierText}\r\n                component = {Textarea}\r\n                validate = {[required]}/>\r\n        </div>\r\n        <div className = {style.btn}>\r\n            <Button textBtn = {\"Add post\"} type = {\"submit\"} />\r\n        </div>\r\n    </form>\r\n    )\r\n}\r\nconst FormEditConteiner = reduxForm()(FormEdit)\r\n\r\nexport default FormEditConteiner;","import React from 'react';\r\nimport style from './MyPosts.module.css';\r\nimport Post from './Posts/Post';\r\nimport FormEditConteiner from '../../Common/Form/EditForm';\r\n\r\n\r\nclass MyPosts extends React.PureComponent {\r\n    \r\n  render() {\r\n  let postsElements = this.props.posts.map(post => <Post key = {post.id}\r\n                                                         postId = {post.id} \r\n                                                         message = {post.message} \r\n                                                         likeCounts = {post.likesCount}\r\n                                                         likePost = {post.isLikes}\r\n                                                         likeDislike = {this.props.likeDislikeSucsess} />)\r\n  let addPost = (data) => {\r\n    this.props.addPost(data.newPostText);\r\n  }        \r\n    return (\r\n      <div className = {style.inner}>\r\n        <div className = {style.form}>\r\n          <FormEditConteiner form = {\"addPost\"} \r\n                            onSubmit={addPost} \r\n                            identifierText = {\"newPostText\"} />\r\n        </div>\r\n        <div className={style.posts}>\r\n          {postsElements}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { addPost, likeDislikeSucsess } from '../../../Redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\nimport { getPosts } from '../../../Redux/profile-selectors';\r\n\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts : getPosts(state)\r\n  }\r\n}\r\n\r\nconst mapDispatchYoProps =  {\r\n  addPost,\r\n  likeDislikeSucsess\r\n}\r\nconst MyPostsConteiner = connect(mapStateToProps, mapDispatchYoProps)(MyPosts);\r\n\r\nexport default MyPostsConteiner;","import React from 'react';\r\nimport Preloader from '../Common/Preloader/Preloader';\r\nimport style from './Profile.module.css';\r\nimport ProfileStatusWithHooks from './ProfileStatus/ProfileStatusWithHooks';\r\nimport userPhoto from '../../assets/images/user.png'\r\nimport MyPostsConteiner from './MyPosts/MyPostsConteiner';\r\nimport Button from '../Common/Button/Button';\r\nimport { useState } from 'react';\r\nimport { submit } from 'redux-form';\r\n\r\nconst Profile = (props) => {\r\n    let onMainPhotoSelected = (event) => {\r\n      if (event.target.files.length) {\r\n        props.savePhoto(event.target.files[0])\r\n      }\r\n    }\r\n    let [addPostode, setAddPostMode] = useState(false)\r\n    if(!props.profile) {\r\n      return <Preloader />\r\n    } \r\n    return (\r\n        <div className = {style.profile}>\r\n          <div className={style.inner}> \r\n            \r\n            <div className = {style.item}>\r\n              <div className = {style.wrapper}>\r\n                <img className = {style.avatar} src = {props.profile.photos.large || userPhoto} alt = \"\"/>\r\n                <div className = {style.loadPhoto}>\r\n                  {props.isOwner && <LoadFile onMainPhotoSelected = {onMainPhotoSelected} />}\r\n                </div>\r\n              </div>\r\n                {props.isOwner && <div className = {style.wrapperBtn}><Button textBtn = {\"Edit mode\"} \r\n                                               link = {'/edit'} /></div>}\r\n            </div>\r\n\r\n            <div className = {style.item}>\r\n              <div className = {style.itemInner}>\r\n\r\n                <div className = {style.wrapper}>\r\n                    <ProfileInfo profile = {props.profile}\r\n                                status = {props.status}\r\n                                updateStatus = {props.updateStatus}\r\n                                isOwner = {props.isOwner} />\r\n                </div>\r\n                \r\n                <div>\r\n                  {props.isOwner && <MyPostsConteiner />}\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n    ) \r\n}\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner}) => {\r\n  return ( \r\n  <div className = {style.info}>\r\n    <h3 className = {style.name}>{profile.fullName}</h3>\r\n      <div className = {style.status}>\r\n        <ProfileStatusWithHooks status = {status} \r\n                                updateStatus = {updateStatus}\r\n                                isOwner = {isOwner} />\r\n      </div>\r\n      <div>About: {profile.aboutMe}</div>\r\n      <div>LookingForAJob: {profile.lookingForAJob ? \"yes\" : \"no\"}</div>\r\n      <div>My profecional skills: {profile.lookingForAJobDescription}</div>\r\n      <div className = {style.contacts}>{Object.keys(profile.contacts)\r\n          .map(key => {\r\n            return <Contact key = {key} contactKey = {key} contactValue = {profile.contacts[key]} />\r\n          })}\r\n      </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nconst LoadFile = (props) => {\r\n  return (\r\n      <div className = {style.wrapperInput}>\r\n          <i className=\"fas fa-download\"></i>\r\n          <input className = {style.inputFile} onChange = {props.onMainPhotoSelected} id = \"file\" name = {\"file\"} type = {\"file\"} />\r\n          <label className = {style.inputLabel} htmlFor = {\"file\"}>Choose file</label>\r\n      </div>\r\n  )\r\n}\r\n\r\nconst Contact = ({contactKey, contactValue}) => {\r\nreturn (\r\n  <div className = {style.contactsItem}>\r\n    <label>{contactKey}: </label>\r\n    <a className = {style.link} \r\n       href = {contactValue} \r\n       target = {\"_blank\"}>{contactValue}</a>\r\n  </div>)\r\n}\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport {getUser, getStatus, updateStatus, savePhoto} from '../../Redux/profile-reducer'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../Hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { getAutorizedUserId, getProfile, getUserStatus } from '../../Redux/profile-selectors';\r\n\r\nclass ProfileConteiner extends React.Component {\r\n  \r\n  checkProfile() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.autorizedUserId\r\n    }\r\n    this.props.getUser(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.checkProfile()\r\n  }\r\n  componentDidUpdate (prevProps, prevState) {\r\n    if (this.props.match.params.userId != prevProps.match.params.userId){\r\n      this.checkProfile()\r\n    }\r\n  }\r\n\r\n    render() {\r\n      let isOwner = !this.props.match.params.userId || this.props.match.params.userId == this.props.autorizedUserId   \r\n      return (<Profile {...this.props} \r\n        profile = {this.props.profile} \r\n        status = {this.props.status}\r\n        isOwner = {isOwner}\r\n        updateStatus = {this.props.updateStatus}\r\n        savePhoto = {this.props.savePhoto} />)\r\n   }\r\n}\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: getProfile(state),\r\n  status : getUserStatus(state),\r\n  autorizedUserId : getAutorizedUserId(state)\r\n})\r\n\r\nlet mapDispatchToProps = {getUser, getStatus, updateStatus, savePhoto}\r\n\r\n\r\n\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withRouter, withAuthRedirect)(ProfileConteiner);"],"sourceRoot":""}