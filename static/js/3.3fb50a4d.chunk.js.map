{"version":3,"sources":["components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Posts/Post.module.css","components/Profile/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/MyPosts/Posts/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsConteiner.jsx","components/Profile/Profile.jsx","components/Profile/ProfileConteiner.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","event","currentTarget","value","Post","className","classes","item","src","message","likeCounts","maxLength15","maxLengthCreator","AddPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPosts","postsElements","this","posts","map","post","likesCount","data","addPost","newPostText","React","PureComponent","mapDispatchYoProps","MyPostsConteiner","connect","state","getPosts","ProfileInfo","profile","style","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contacts","Object","keys","key","contactKey","contactValue","Contact","Profile","inner","avatar","photos","large","userPhoto","alt","isOwner","target","files","length","savePhoto","type","to","Preloader","ProfileConteiner","userId","match","params","autorizedUserId","getUser","getStatus","checkProfile","prevProps","prevState","Component","mapDispatchToProps","compose","getProfile","getUserStatus","getAutorizedUserId","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/3.3fb50a4d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inner\":\"Profile_inner__1Gbba\",\"avatar\":\"Profile_avatar__33UfQ\",\"item\":\"Profile_item__-KQ3t\",\"name\":\"Profile_name__2n-wZ\",\"status\":\"Profile_status__2CXpB\",\"contacts\":\"Profile_contacts__3osy6\",\"editMode\":\"Profile_editMode__17YGt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"MyPosts_post__1VWrW\",\"posts\":\"MyPosts_posts__1JHv-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__UHDgP\"};","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    \r\n    let [editMode, setEditMode] = useState(false),\r\n        [status, setStatus] = useState(props.status)\r\n    \r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={()=>{setEditMode(true)}}>{status || \"--\"}</span>\r\n                </div>}\r\n            {editMode &&\r\n                <div>\r\n                    <input autoFocus={true}\r\n                           onBlur = {()=>{\r\n                               setEditMode(false)\r\n                               props.updateStatus(status)}}\r\n                           onChange = {(event)=>{setStatus(event.currentTarget.value)}}\r\n                           value = {status}/>\r\n                </div>}\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return <div className={classes.item}>\r\n      <img src=\"https://static.independent.co.uk/s3fs-public/thumbnails/image/2020/06/18/10/avatar.jpg\" />\r\n              {props.message}\r\n              <div>\r\n                <span>{props.likeCounts} likes</span>\r\n              </div>\r\n    </div>   \r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../Utils/Validators/validators';\r\nimport { Textarea } from '../../Common/FormsControl/FormsControl';\r\nimport classes from './MyPosts.module.css';\r\nimport Post from './Posts/Post';\r\n\r\nconst maxLength15 =  maxLengthCreator(15)\r\nconst AddPostForm = (props) => {\r\n  return (\r\n    <form onSubmit = {props.handleSubmit}>\r\n      <div>\r\n        <Field component = {Textarea} \r\n               name = {\"newPostText\"} \r\n               placeholder = {\"Enter new post text\"} \r\n               validate = {[required, maxLength15]}/>\r\n      </div>\r\n      <div>\r\n        <button>Add posts</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\nconst AddPostFormRedux = reduxForm({form : 'addPost'})(AddPostForm)\r\n\r\n\r\nclass MyPosts extends React.PureComponent {\r\n      \r\n  /* shouldComponentUpdate(nextProps, nextState) {\r\n    return nextProps != this.props || nextState != this.state\r\n  } */\r\n\r\n  render() {\r\n  let postsElements = this.props.posts.map(post => <Post message={post.message} likeCounts={post.likesCount} />)\r\n  \r\n  let addPost = (data) => {\r\n    this.props.addPost(data.newPostText);\r\n  }        \r\n    return (\r\n      <div>\r\n        <h3>My posts</h3>\r\n        <AddPostFormRedux onSubmit={addPost} />\r\n        <div className={classes.posts}>\r\n          {postsElements}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { addPost } from '../../../Redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\nimport { getPosts } from '../../../Redux/profile-selectors';\r\n\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts : getPosts(state)\r\n  }\r\n}\r\n\r\nconst mapDispatchYoProps =  {\r\n  addPost\r\n}\r\nconst MyPostsConteiner = connect(mapStateToProps, mapDispatchYoProps)(MyPosts);\r\n\r\nexport default MyPostsConteiner;","import React from 'react';\r\nimport Preloader from '../Common/Preloader/Preloader';\r\nimport style from './Profile.module.css';\r\n\r\nimport ProfileStatusWithHooks from './ProfileStatus/ProfileStatusWithHooks';\r\nimport userPhoto from '../../assets/images/user.png'\r\nimport MyPostsConteiner from './MyPosts/MyPostsConteiner';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Profile = (props) => {\r\n    let onMainPhotoSelected = (event) => {\r\n      if (event.target.files.length) {\r\n        props.savePhoto(event.target.files[0])\r\n      }\r\n    }\r\n    if(!props.profile) {\r\n      return <Preloader />\r\n    } \r\n    return (\r\n        <div className = {style.profile}>\r\n          <div className={style.inner}> \r\n            \r\n            <div className = {style.item}>\r\n              <img className = {style.avatar} src = {props.profile.photos.large || userPhoto} alt = \"\"/>\r\n              <div>\r\n                {props.isOwner && <input onChange = {onMainPhotoSelected} type = {\"file\"} />}\r\n              </div>\r\n              <div className = {style.editMode}>\r\n                  {props.isOwner && <NavLink to = \"/edit\">EditMode</NavLink>}\r\n              </div>\r\n\r\n            </div>\r\n\r\n            <div className = {style.item}>\r\n              <div>\r\n                <ProfileInfo profile = {props.profile}\r\n                             status = {props.status}\r\n                             updateStatus = {props.updateStatus} />\r\n              </div>\r\n\r\n              <div>\r\n                <MyPostsConteiner />\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n    ) \r\n}\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n  return ( \r\n  <div>\r\n    <div className = {style.name}>{profile.fullName}</div>\r\n      <div className = {style.status}>\r\n        <ProfileStatusWithHooks status = {status} \r\n                                updateStatus = {updateStatus} />\r\n      </div>\r\n      <div>About: {profile.aboutMe}</div>\r\n      <div>LookingForAJob: {profile.lookingForAJob ? \"yes\" : \"no\"}</div>\r\n      <div>My profecional skills: {profile.lookingForAJobDescription}</div>\r\n      <div className = {style.contacts}>{Object.keys(profile.contacts)\r\n          .map(key => {\r\n            return <Contact key = {key} contactKey = {key} contactValue = {profile.contacts[key]} />\r\n          })}\r\n    </div>\r\n  </div>\r\n  )\r\n}\r\n\r\n\r\nconst Contact = ({contactKey, contactValue}) => {\r\nreturn <div>{contactKey}: {contactValue}</div>\r\n}\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport {getUser, getStatus, updateStatus, savePhoto} from '../../Redux/profile-reducer'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../Hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { getAutorizedUserId, getProfile, getUserStatus } from '../../Redux/profile-selectors';\r\n\r\nclass ProfileConteiner extends React.Component {\r\n  \r\n  checkProfile() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.autorizedUserId\r\n    }\r\n    this.props.getUser(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.checkProfile()\r\n  }\r\n  componentDidUpdate (prevProps, prevState) {\r\n    if (this.props.match.params.userId !== prevProps.match.params.userId){\r\n      this.checkProfile()\r\n    }\r\n  }\r\n\r\n    render() {   \r\n      return (<Profile {...this.props} \r\n        profile = {this.props.profile} \r\n        status = {this.props.status}\r\n        isOwner = {!this.props.match.params.userId}\r\n        updateStatus = {this.props.updateStatus}\r\n        savePhoto = {this.props.savePhoto} />)\r\n   }\r\n}\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: getProfile(state),\r\n  status : getUserStatus(state),\r\n  autorizedUserId : getAutorizedUserId(state)\r\n})\r\n\r\nlet mapDispatchToProps = {getUser, getStatus, updateStatus, savePhoto}\r\n\r\n\r\n\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withRouter, withAuthRedirect)(ProfileConteiner);"],"sourceRoot":""}